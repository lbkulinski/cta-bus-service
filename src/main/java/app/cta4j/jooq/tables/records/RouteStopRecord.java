/*
 * This file is generated by jOOQ.
 */
package app.cta4j.jooq.tables.records;


import app.cta4j.jooq.enums.Direction;
import app.cta4j.jooq.tables.RouteStop;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouteStopRecord extends UpdatableRecordImpl<RouteStopRecord> implements Record4<Integer, String, String, Direction> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.route_stop.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.route_stop.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.route_stop.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.route_stop.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.route_stop.route_id</code>.
     */
    public void setRouteId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.route_stop.route_id</code>.
     */
    public String getRouteId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.route_stop.direction</code>.
     */
    public void setDirection(Direction value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.route_stop.direction</code>.
     */
    public Direction getDirection() {
        return (Direction) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Direction> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Direction> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RouteStop.ROUTE_STOP.ID;
    }

    @Override
    public Field<String> field2() {
        return RouteStop.ROUTE_STOP.NAME;
    }

    @Override
    public Field<String> field3() {
        return RouteStop.ROUTE_STOP.ROUTE_ID;
    }

    @Override
    public Field<Direction> field4() {
        return RouteStop.ROUTE_STOP.DIRECTION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getRouteId();
    }

    @Override
    public Direction component4() {
        return getDirection();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getRouteId();
    }

    @Override
    public Direction value4() {
        return getDirection();
    }

    @Override
    public RouteStopRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RouteStopRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public RouteStopRecord value3(String value) {
        setRouteId(value);
        return this;
    }

    @Override
    public RouteStopRecord value4(Direction value) {
        setDirection(value);
        return this;
    }

    @Override
    public RouteStopRecord values(Integer value1, String value2, String value3, Direction value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouteStopRecord
     */
    public RouteStopRecord() {
        super(RouteStop.ROUTE_STOP);
    }

    /**
     * Create a detached, initialised RouteStopRecord
     */
    public RouteStopRecord(Integer id, String name, String routeId, Direction direction) {
        super(RouteStop.ROUTE_STOP);

        setId(id);
        setName(name);
        setRouteId(routeId);
        setDirection(direction);
        resetChangedOnNotNull();
    }
}
